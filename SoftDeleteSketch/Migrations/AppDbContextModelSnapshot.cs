// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SoftDeleteSketch.Entities;

#nullable disable

namespace SoftDeleteSketch.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SoftDeleteSketch.Entities.Blog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletionDateUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b17800bf-9952-4e0b-b793-bb629162b009"),
                            IsDeleted = false,
                            Name = "Blog 1",
                            OwnerId = new Guid("b17800bf-9952-47b7-9fe2-7a7b0f6b2de0")
                        },
                        new
                        {
                            Id = new Guid("b17800bf-9952-4d51-a4fc-96c2a84b466e"),
                            IsDeleted = false,
                            Name = "Blog 2",
                            OwnerId = new Guid("b17800bf-9952-41ab-b8bd-1e071945bb1a")
                        },
                        new
                        {
                            Id = new Guid("b17800bf-9952-403e-b1df-c93be3dc9c03"),
                            IsDeleted = false,
                            Name = "Blog 3",
                            OwnerId = new Guid("b17800bf-9952-4ae3-b1d5-585948a67252")
                        });
                });

            modelBuilder.Entity("SoftDeleteSketch.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletionDateUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b17800bf-9952-4ae3-b1d5-585948a67252"),
                            IsDeleted = false,
                            Name = "Person 1"
                        },
                        new
                        {
                            Id = new Guid("b17800bf-9952-41ab-b8bd-1e071945bb1a"),
                            IsDeleted = false,
                            Name = "Person 2"
                        },
                        new
                        {
                            Id = new Guid("b17800bf-9952-47b7-9fe2-7a7b0f6b2de0"),
                            IsDeleted = false,
                            Name = "Person 3"
                        });
                });

            modelBuilder.Entity("SoftDeleteSketch.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BlogId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b17800bf-9952-469e-958b-dbcf673992c3"),
                            AuthorId = new Guid("b17800bf-9952-47b7-9fe2-7a7b0f6b2de0"),
                            BlogId = new Guid("b17800bf-9952-403e-b1df-c93be3dc9c03"),
                            Content = "Content 1",
                            Title = "Post 1"
                        },
                        new
                        {
                            Id = new Guid("b17800bf-9952-4dbe-9325-37e53fc147b0"),
                            AuthorId = new Guid("b17800bf-9952-41ab-b8bd-1e071945bb1a"),
                            BlogId = new Guid("b17800bf-9952-4d51-a4fc-96c2a84b466e"),
                            Content = "Content 2",
                            Title = "Post 2"
                        },
                        new
                        {
                            Id = new Guid("b17800bf-9952-4491-894e-720664bff71c"),
                            AuthorId = new Guid("b17800bf-9952-4ae3-b1d5-585948a67252"),
                            BlogId = new Guid("b17800bf-9952-4e0b-b793-bb629162b009"),
                            Content = "Content 3",
                            Title = "Post 3"
                        });
                });

            modelBuilder.Entity("SoftDeleteSketch.Entities.Blog", b =>
                {
                    b.HasOne("SoftDeleteSketch.Entities.Person", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SoftDeleteSketch.Entities.Post", b =>
                {
                    b.HasOne("SoftDeleteSketch.Entities.Person", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftDeleteSketch.Entities.Blog", "Blog")
                        .WithMany()
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Blog");
                });
#pragma warning restore 612, 618
        }
    }
}
